{
  "files": [
    {
      "id": "350c343c-316f-477f-b516-fae15d453b55",
      "name": "appsscript",
      "type": "json",
      "source": "{\n  \"timeZone\": \"America/Bogota\",\n  \"dependencies\": {},\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"
    },
    {
      "id": "c669bf2f-2aad-469d-b869-ad536150b50b",
      "name": "Código",
      "type": "server_js",
      "source": "const ss = SpreadsheetApp.getActiveSpreadsheet();\n\nfunction onOpen(){\n  \n   var ui = SpreadsheetApp.getUi();\n        \n    ui.createMenu('CONVERSOR')\n        .addItem('ABRIR', 'editar')\n        .addToUi();     \n}"
    },
    {
      "id": "f37d8417-aba2-4951-a5da-54fab0d3d508",
      "name": "Conversor",
      "type": "server_js",
      "source": "function getRecords(xml) {\n  // xml = xmlM + '</mas>';\n  // xml += '</mas>';\n  xml = xml.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  var document = XmlService.parse(xml);\n  var xmlDoc = XmlService.getRawFormat()\n    .setEncoding('ISO-8859-1')\n    .format(document);\n\n  var response = document.getRootElement();\n  // var infoItems = response.getChild('Cab').getChildren();\n  var docInfo = {};\n  // infoItems.forEach(child => docInfo[child.getName()] = child.getText());\n  var recordList = response.getChildren();\n\n  var attributes = findAllAttributes(recordList);\n\n  var output = [attributes];\n  for (var i = 0, record; record = recordList[i]; i++) {\n    let row = [];\n    for(let attr of attributes){\n      var recordAttr = record.getAttribute(attr);\n      if(!recordAttr)\n        var cell = '';\n      else\n        var cell = record.getAttribute(attr).getValue();\n      row.push(cell);\n    }\n    output.push(row);\n  }\n  return [output, docInfo];\n}\n\nfunction findAllAttributes(recordList){\n  if(recordList.length == 0) return [];\n  var attributes = recordList[0].getAttributes().map(attr => attr.getName());\n\n  for (var i = 0, record; record = recordList[i]; i++) {\n    let newAttributes = record.getAttributes().map(attr => attr.getName());\n    for(let attr of newAttributes)\n      if(!attributes.includes(attr))\n        attributes.push(attr);\n  }\n\n  return attributes;\n}"
    },
    {
      "id": "132f905d-f8ae-427d-9a23-c4c5da929c5c",
      "name": "Dialog",
      "type": "server_js",
      "source": "function editar() {\n\n  var html = HtmlService.createTemplateFromFile('document');\n\n  var arregloSeccion = ['xmlString{'];\n  var obj = { 'xmlString{': '' };\n  arregloSeccion.map(\n    item =>  html[item] = ''\n  )  \n\n  var page = html.evaluate();\n  // page.append('<form class=\"text-center\" id=\"infoForm\">'); // onsubmit=\"return validarForm(this)\"\n  // page.append('<input type=\"hidden\" id=\"tipo\" name=\"tipo\"  value=\"editar\">');\n  // // page.append(getInputForm('xmlString{', obj, 'TEXTO XML', true));\n  // page.append(getInputForm('file;', obj, '', true));\n  // page.append('<button type=\"submit\" class=\"btn btn-primary my-2\">Actualizar informacion de empleado</button>');\n  // page.append('</form>');\n  \n  page.addMetaTag('viewport', 'width=device-width, initial-scale=1');\n  page.setWidth(500).setHeight(150);\n  SpreadsheetApp.getUi().showModalDialog(page, 'CONVERSOR');\n  // SpreadsheetApp.getUi().showSidebar(page);\n}\n\nfunction validarForm(formObject){\n  switch(formObject.tipo){\n    case 'editar':\n      if('id#' in formObject) validarCedulaRepetida(formObject['id#']); // si el form tiene el input id#\n      formEditar(formObject);\n      break;\n\n    case 'insertar':\n      validarCedulaRepetida(formObject['id#']);\n      formInsertar(formObject);\n      break;\n\n    case 'editar-extras':\n      formExtras(formObject);\n      break;\n\n    case 'select-mes-cuentas':\n      formCuentas(formObject);\n      break;\n\n\n    default:\n      return;\n  }\n}\n\nfunction leerXml(fileId){\n  // {\n  // \"filename\": \"### inputted filename ###\",\n  // \"fileId\": \"###\",\n  // \"fileUrl\": \"https://drive.google.com/file/d/###/view?usp=drivesdk\"\n  // }\n  convertirXml(fileId);\n}\n\nfunction convertirXml(fileId){\n  showLoadingDialog();\n  \n  try{\n    // var url = \"https://www.googleapis.com/drive/v3/files/\" + fileId + \"?alt=media&access_token=\" + ScriptApp.getOAuthToken(); // Added\n    // var res = UrlFetchApp.fetch(url).getContentText(); \n    var file = DriveApp.getFileById(fileId);\n    var fileName = file.getName();\n    var xmlBlob = file.getBlob().getDataAsString();\n    // var xml = XmlService.parse(xmlBlob);\n    var [records, formatInfo] = getRecords(xmlBlob);\n    writeRecords(fileName, records, formatInfo);\n    closeLoadingDialog('Conversión');\n  } catch(error){ \n    showErrorDialog(error.stack); \n    console.error(error);\n  }\n}\n\nfunction formEditar(formObject){\n  showLoadingDialog();\n  \n  try{\n    var form = JSON.parse(JSON.stringify(formObject));\n    var xml = DriveApp.getFileById()\n    var fileName = xml.getName();\n    var [records, formatInfo] = getRecords(xml);\n    writeRecords(fileName, records, formatInfo);\n    closeLoadingDialog('Conversión');\n  } catch(error){ \n    showErrorDialog(error.stack); \n    console.error(error);\n  }\n}\n\nfunction writeRecords(fileName, records, formatInfo){\n  let sheet = ss.getSheetByName(fileName);\n  if(!sheet) {sheet = ss.insertSheet(); sheet.setName(fileName); }\n  sheet.clear();\n\n  // var info = [[],[]];\n  // // for(let key in formatInfo)\n  // for(const key of Object.keys(formatInfo)){\n  //   info[0].push(key);\n  //   info[1].push(formatInfo[key]);\n  // }\n  // sheet.getRange('1:1').setBackground('#45818e').setFontColor('white');\n  // sheet.getRange('5:5').setBackground('#a2c4c9').setFontColor('white');\n  // let rangeInfo = sheet.getRange(1,1,2,info[0].length);\n  // rangeInfo.setValues(info);\n\n  let rangeRecords = sheet.getRange(5,1,records.length,records[0].length);\n  rangeRecords.setValues(records);\n}\n\n//------------------------------------- showDialog -----------------------------------------\nfunction showLoadingDialog() {\n  var htmlOutput = HtmlService\n    .createHtmlOutput()\n    .setWidth(300)\n    .setHeight(300);\n  SpreadsheetApp.getUi().showModalDialog(htmlOutput, 'Cargando...');\n}\nfunction closeLoadingDialog(action){\n  var htmlOutput = HtmlService\n    .createHtmlOutput('<script>google.script.host.close();</script>')\n    .setWidth(300)\n    .setHeight(300);\n  SpreadsheetApp.getUi().showModalDialog(htmlOutput, action);\n}\nfunction showErrorDialog(errorMessage){\n  var htmlOutput = HtmlService\n    .createHtmlOutput(`<div style=\"text-align: center; font-family: monospace;\">${errorMessage}</div>`)\n    .setWidth(300)\n    .setHeight(300);\n  SpreadsheetApp.getUi().showModalDialog(htmlOutput, 'Error');\n  // console.error(errorMessage.stack);\n}"
    },
    {
      "id": "cf663c3c-eecc-4993-8fac-fd6c9c5d45c3",
      "name": "document",
      "type": "html",
      "source": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\" integrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\" integrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\" crossorigin=\"anonymous\"></script>    \n    <title>Document</title>\n</head>\n<body>\n  <div class=\"container\">\n    <!-- Here the html will be generated automatically from editar-info.gs file -->\n    <form class=\"text-center\" id=\"infoForm\">\n    <input type=\"hidden\" id=\"tipo\" name=\"tipo\"  value=\"editar\">\n      <!-- <div class=\"m-2 requires-validation\" novalidate>\n                    <input \n                      type=\"file\" \n                      class=\"form-control\" \n                      onkeyup=\"\" \n                      placeholder=\"\" \n                      id=\"file;\" \n                      name=\"file;\" \n                      value=\"\"\n                      required> -->\n                    <!-- <label for=\"floatingInput\"></label> -->\n                  <div class=\"m-2 requires-validation\">\n                    <input class=\"form-control\"  name=\"file;\" id=\"uploadfile\" type=\"file\" required>\n                    <input name=\"filename\" id=\"filename\" type=\"hidden\">\n                  </div>\n    <input id=\"submit\" type=\"submit\" class=\"btn btn-primary my-2\">\n    <!-- <button type=\"submit\" class=\"btn btn-primary my-2\">Actualizar informacion de empleado</button> -->\n  </form>\n  </div>\n  <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\">\n  </script>\n  <script>\n\n    \n      const form = document.getElementById('infoForm');\n      form.addEventListener('submit', e => {\n        $('button').attr('disabled', true);\n        \n        e.preventDefault();\n        const file = form['file;'].files[0];\n        const fr = new FileReader();\n        fr.readAsArrayBuffer(file);\n        fr.onload = f => {\n          \n          const url = \"https://script.google.com/macros/s/AKfycbxLMDvHdeG2BXhO5_GzysiQl3SNE4q-xDM6bQjsNkK9dnTcBq-ExCISrfN4Bjb-h7PFig/exec\";  // <--- Please set the URL of Web Apps.\n          \n          const qs = new URLSearchParams({filename: form.filename.value || file.name, mimeType: file.type}); // form.filename.value\n          fetch(`${url}?${qs}`, {method: \"POST\", body: JSON.stringify([...new Int8Array(f.target.result)])})\n          .then(res => res.json())\n          .then(e => google.script.run.withFailureHandler(onFailure).leerXml(e.fileId))  // <--- You can retrieve the returned value here.\n          .catch(err => console.log(err));\n        }\n      });\n\n    function validarForm(form){\n      $('button').attr('disabled', true);\n      google.script.run.withFailureHandler(onFailure).validarForm(form);\n      return false;\n    }\n    function onFailure(error){\n      var elementId = error.message.split('Error: ')[1].replace('#','\\\\#');\n      $('#'+elementId).addClass('is-invalid');\n      $('#'+elementId).trigger('focus');\n    }\n    function toggleInvalid(input){\n      var elementId = input.id.replace('#','\\\\#');\n      $('#'+elementId).removeClass('is-invalid');\n      $('button').attr('disabled', false);\n    }\n    function changeCheckbox(input){\n      input.value = input.checked;\n    }\n    function puntos(input){\n      var newValue = input.value.replace(/\\D/g, \"\")\n                                .replace(/\\B(?=(\\d{3})+(?!\\d)\\.?)/g, \".\");\n      input.value = newValue;\n    }\n    function porcentaje(input){\n      var newValue = input.value;\n      newValue = newValue[0].replace(/[^0-9-]/,'') \n                + newValue.slice(1).replace(/\\D/g, '');\n      newValue = (newValue != '') ? newValue.concat('%') : newValue;                              \n      input.value = newValue;\n      const setCaretPosition = (elem, caretPos) => {\n        if (elem !== null) {\n          if (elem.createTextRange) {\n            const range = elem.createTextRange();\n            range.move('character', caretPos);\n            range.select();\n          } else {\n            if (elem.selectionStart) {\n              elem.focus();\n              elem.setSelectionRange(caretPos, caretPos);\n            } else\n              elem.focus();\n          }\n        }\n      }\n      setCaretPosition(input, Math.max(input.value.length-1, 0));\n    }\n  </script>\n</body>\n</html>"
    },
    {
      "id": "d43fb583-5fe9-4e46-9e46-08ec2d8f7c7b",
      "name": "Calculos",
      "type": "server_js",
      "source": "function getInputForm(indexWithType, objetoEmpleado, tablaTitle, validaForm){\n  var event = '';\n  var patternAttr = '', titleAttr = '', invalidFeedback = '', requiredAttr = '';\n  var index = indexWithType.split('-')[0];\n  var esSelect = false, esTextarea = false, esCheckbox = false; esFile = true;\n  if( indexWithType.includes('^') ){\n    var type = 'date';\n    event = '';\n    objetoEmpleado[index] = objetoEmpleado[index].split('T')[0].toString();\n  }else if( indexWithType.includes('#') ){\n    event = 'puntos(this);toggleInvalid(this)';\n    if(index=='id#'){\n      patternAttr  = 'pattern=\"^[0-9.]{5,}$\"';\n      titleAttr = 'title=\"Al menos 4 números y con puntos\"';\n      requiredAttr = 'required';\n      // si en validacion client-side ya existe la cedula:\n      invalidFeedback = `<div class=\"invalid-tooltip\">Cédula ya existe</div>`;\n    }\n    var type = 'text';\n    objetoEmpleado[index] = setDotSeparator(objetoEmpleado[index]);\n  }else if( indexWithType.includes('~') ){\n    event = '';\n    if(index=='nombre~'){\n      patternAttr  = 'pattern=\"^[A-Za-z\\\\s]+$\"';\n      titleAttr = 'title=\"Solo letras o espacios sin caracteres especiales\"';\n    }\n    var type = 'text';\n  }else if( indexWithType.includes('*') ){\n    event = '';\n    var type = 'text';\n    esSelect = true;\n    var key = indexWithType.split('*')[0];\n    var opciones = getPropiedadesDocumento([key])[0];\n  }else if( indexWithType.includes('%') ){\n    event = 'porcentaje(this)';\n    var type = 'text';\n    objetoEmpleado[index] *= 100;\n    objetoEmpleado[index] += '%';\n  }else if( indexWithType.includes('{') ){\n    event = '';\n    esTextarea = true;\n  }else if( indexWithType.includes(';') ){\n    event = '';\n    esFile = true;\n  }else if( indexWithType.includes('?') ){\n    event = 'changeCheckbox(this)';\n    esCheckbox = true;\n    var type = 'checkbox';\n  }\n\n  if ( esSelect ){\n    var listaOpciones = '<option value=\"\" selected>Selecciona una opción</option>';\n    for(i=0; i < opciones.length; i++){\n      if(opciones[i] != ''){\n        if(objetoEmpleado[index] == opciones[i])\n          listaOpciones += `<option value=\"${opciones[i]}\" selected>${opciones[i]}</option>`;\n        else\n          listaOpciones += `<option value=\"${opciones[i]}\">${opciones[i]}</option>`;\n      }\n    }\n\n    return `<div class=\"form-floating m-2\">\n              <select \n                class=\"form-control\" \n                onkeyup=\"${event}\" \n                id=\"${index}\" \n                name=\"${index}\">`\n                  +listaOpciones+\n              `</select>\n              <label for=\"floatingInput\">${tablaTitle}</label>\n            </div>`;\n  } else if( esTextarea ){\n    return `<div class=\"form-floating m-2\">\n              <textarea class=\"form-control\" onkeyup=\"${event}\" placeholder=\"${tablaTitle}\" id=\"${index}\" name=\"${index}\" style=\"height: 500px\">${objetoEmpleado[index]}</textarea>\n              <label for=\"${index}\">${tablaTitle}</label>\n            </div>`;\n  } else if( esCheckbox ){\n    return `<div class=\"d-flex justify-content-center\">\n            <div class=\"form-check\">\n              <input \n                type=\"${type}\" \n                class=\"form-check-input\" \n                onclick=\"${event}\" \n                id=\"${index}\" \n                name=\"${index}\"\n                value=\"${objetoEmpleado[index]}\" \n                ${objetoEmpleado[index] ? 'checked' : ''}>\n              <label class=\"form-check-label\" for=\"${index}\">${tablaTitle}</label>\n            </div>\n            </div>\n            `;\n  } else if( esFile ){\n    return `<div class=\"m-2 requires-validation\" novalidate>\n              <input \n                type=\"file\" \n                class=\"form-control\" \n                onkeyup=\"${event}\" \n                placeholder=\"${tablaTitle}\" \n                id=\"${index}\" \n                name=\"${index}\" \n                value=\"${objetoEmpleado[index]}\"\n                ${patternAttr}\n                ${titleAttr}\n                ${requiredAttr}>\n              <label for=\"floatingInput\">${tablaTitle}</label>\n              ${invalidFeedback}\n            </div>`;\n  } else // es input\n    return `<div class=\"form-floating m-2 requires-validation\" novalidate>\n              <input \n                type=\"${type}\" \n                class=\"form-control\" \n                onkeyup=\"${event}\" \n                placeholder=\"${tablaTitle}\" \n                id=\"${index}\" \n                name=\"${index}\" \n                value=\"${objetoEmpleado[index]}\"\n                ${patternAttr}\n                ${titleAttr}\n                ${requiredAttr}>\n              <label for=\"floatingInput\">${tablaTitle}</label>\n              ${invalidFeedback}\n            </div>`;\n}\n\nfunction getInputFilaForm(indexesWithType, objetoFila, tablaTitles, colTamanos,j){\n  let ret = `<div class=\"form-floating m-2 requires-validation\" novalidate style=\"margin:1\">\n              <div class=\"row\">`;\n\n  indexesWithType.forEach((index, i) => {\n      var event = '';\n      var patternAttr = '', titleAttr = '', invalidFeedback = '', requiredAttr = '';\n      // index = index + i;\n      index = index + j\n\n      if( index.includes('^') ){\n        var type = 'date';\n        event = '';\n        // objetoFila[index] = objetoFila[index].split('T')[0].toString();\n        let x= '';\n      }else if( index.includes('#') ){\n        event = 'puntos(this);toggleInvalid(this)';\n        var type = 'text';\n        // objetoFila[index] = setDotSeparator(objetoFila[index]);\n      }else if( index.includes('~') ){\n        event = '';\n        if(index=='nombre~'){\n          patternAttr  = 'pattern=\"^[A-Za-z\\\\s]+$\"';\n          titleAttr = 'title=\"Solo letras o espacios sin caracteres especiales\"';\n        }\n        var type = 'text';\n      }else if( index.includes('%') ){\n        event = 'porcentaje(this)';\n        var type = 'text';\n        objetoFila[index] *= 100;\n        objetoFila[index] += '%';\n      }else if( index.includes('&') ){\n        event = '';\n        requiredAttr = 'disabled';\n        var type = 'text';\n      }\n      ret +=    `<div class=\"col-${colTamanos[i]}\">\n                  <input \n                    type=\"${type}\" \n                    class=\"form-control\" \n                    onkeyup=\"${event}\" \n                    placeholder=\"${tablaTitles[i]}\" \n                    id=\"${index}\" \n                    name=\"${index}\" \n                    value=\"${objetoFila[index]}\"\n                    ${patternAttr}\n                    ${titleAttr}\n                    ${requiredAttr}\n                    aria-label=\"${tablaTitles[i]}\">\n                  ${invalidFeedback}\n                </div>`;\n    });\n      ret +=  `</div>\n            </div>`;\n  return ret;\n}\n\nfunction setDotSeparator(number){\n  return number.toString().replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d)\\.?)/g, \".\");\n}\n\nfunction setFormatoPesos(input) {\n  if(!input) input = '0';\n  input = input.toString();\n  if(input.includes('#')) return input;\n  var input = Math.ceil(input).toString();\n  var newValue = '$ ' + input //.replace(/\\D/g, \",\") // coma decimal\n                                       .replace(/\\B(?=(\\d{3})+(?!\\d)\\.?)/g, \".\"); // puntos de miles\n  return newValue;\n}\n\nfunction escribirTablaHTML(miTabla) {\n  var output = `<table class=\"table table-hover table-sm\">`;\n  for(fila in miTabla){\n      var celda = '';\n      if(fila == 'header_row')\n      {\n        output += `<thead class='table-dark'>`;\n        output += `<tr>`;\n        for(var j=0; j<miTabla[fila].length; j++){\n          celda = miTabla[fila][j];\n          output += `<th class='text-end'>${celda}</th>`;\n        }\n        output += `</tr>`;\n        output += `</thead>`;\n        output += `<tbody>`;\n      } \n      else if(fila == 'foot_row')\n      {\n        output += `<tfoot>`;\n        output += `<tr>`;\n        for(var j=0; j<miTabla[fila].length; j++){\n          celda = miTabla[fila][j];\n          if(j==0) \n            output += `<td>${typeof celda === 'string' ? celda.toUpperCase() : celda}</td>`;\n          else\n            output += `<td class='text-end'>${celda}</td>`;\n        }\n        output += `</tr>`;\n        output += `</tfoot>`;\n      } \n      else \n      {\n        output += `<tr>`;\n        for(var j=0; j<miTabla[fila].length; j++){\n          celda = miTabla[fila][j];\n          if(j==0) \n            output += `<td>${typeof celda === 'string' ? celda.toUpperCase() : celda}</td>`;\n          else\n            output += `<td class='text-end'>${celda}</td>`;\n        }\n        output += `</tr>`;\n      }\n  }\n  output += `</tbody>`;\n  output += \"</table>\";\n\n  return output;\n}\n\n// function setFormatoNumero(input) {\n//   if (!input) input = '0';\n//   var newValue = input.toString();\n//   return newValue;\n// }\n\n//------------------------------------- HORAS -----------------------------------------\nfunction calcularHoras(empleado){\n\n  var diurnas = 0, nocturnas = 0, diurnasDom = 0, nocturnasDom = 0, diasDesplazamientos = 0;\n\n  for (let dia of diasSemana) {\n    if (empleado[dia] != '') {\n      diasDesplazamientos++;\n      var jornada = empleado[dia];\n      var intervalos = jornada.split(';');\n      for (var key in intervalos) {\n        var horas = intervalos[key];\n        var array = horas.split('-');\n        array[0] = parseTimeTwelve(array[0]);\n        array[1] = parseTimeTwelve(array[1]);\n        if(dia == 'domingo'){\n          diurnasDom += calcularDiurnas(array);\n          nocturnasDom += calcularNocturnas(array);\n        } else {\n          diurnas += calcularDiurnas(array);\n          nocturnas += calcularNocturnas(array);\n        }\n      }\n    }\n  }\n  empleado['horasHorarioOrdinarioDia'] = diurnas;\n  empleado['horasHorarioOrdinarioNoche'] = nocturnas;\n  empleado['horasHorarioDominicalDia'] = diurnasDom;\n  empleado['horasHorarioDominicalNoche'] = nocturnasDom;\n  empleado['diasDesplazamientos#'] = diasDesplazamientos;\n  empleado['horasHorarioTotal'] = diurnas + nocturnas + diurnasDom + nocturnasDom;\n  return empleado;\n}\n\nfunction calcularHorasSEDE(empleado){\n\n  var diurnas = 0, nocturnas = 0, diurnasDom = 0, nocturnasDom = 0, diasDesplazamientos = 0;\n\n  for (let dia of diasSemana) {\n    if (empleado[dia] != '') {\n      diasDesplazamientos++;\n      var jornada = empleado[dia];\n      var intervalos = jornada.split(';');\n      for (var key in intervalos) {\n        var horas = intervalos[key];\n        var array = horas.split('-');\n        array[0] = parseTimeTwelve(array[0]);\n        array[1] = parseTimeTwelve(array[1]);\n        if(dia == 'domingo'){\n          diurnasDom += calcularDiurnas(array);\n          nocturnasDom += calcularNocturnas(array);\n        } else {\n          diurnas += calcularDiurnas(array);\n          nocturnas += calcularNocturnas(array);\n        }\n      }\n    }\n  }\n  empleado['horasHorarioOrdinarioDiaSEDE'] = diurnas;\n  empleado['horasHorarioOrdinarioNocheSEDE'] = nocturnas;\n  empleado['horasHorarioDominicalDiaSEDE'] = diurnasDom;\n  empleado['horasHorarioDominicalNocheSEDE'] = nocturnasDom;\n  empleado['diasDesplazamientos#SEDE'] = diasDesplazamientos;\n  return empleado;\n}\n\nfunction calcularHorasPropuestas(empleado){ \n  let horario = {};\n  if(empleado['horarioPropuesto'])\n    var horarioPropuesto = empleado['horarioPropuesto'].split('||');\n  else\n    return calcularHorasSEDE(empleado);\n\n  diasSemana.forEach((dia, index) => {\n    horario[dia] = empleado[dia];\n    empleado[dia] = horarioPropuesto[index];\n  });\n\n  empleado = calcularHorasSEDE(empleado);\n  diasSemana.forEach((dia) => { empleado[dia] = horario[dia]; });\n\n  return empleado;\n}\n\nfunction filtrarHoraInicio(dia){\n  var diaHorario = dia.toLowerCase();\n  arregloEmpleados = [];\n  activo = {\n    fila : ss.getActiveCell().getRow(),\n    columna : ss.getActiveCell().getColumn(),\n    nombreHoja : 'NOMINA'\n  }\n  arregloHoja = ss.getSheetByName(activo.nombreHoja).getRange('1:200').getValues();\n  leerHoja();\n\n  var cargosH = [\"BARR\", \"MESA\"] //AQUI ESTAN LOS CARGOS QUE SE TIENEN EN CUENTA PARA LA FUNCION\n  var turnos = {};\n  var turnosCompletos = {};\n\n  for(i in cargosH){\n    let empleadosCargo = arregloEmpleados.filter(emp => (cargosH[i] == emp['cargo*'].split(' - ')[0] && emp[diaHorario] != ''));\n    if(empleadosCargo[0]){\n      let cargo = empleadosCargo[0]['cargo*'];\n      let turnosCargo = {}; \n\n      empleadosCargo.forEach( emp => {\n          let turno = emp[diaHorario].split(\";\")[0];\n          let starttime = parseTimeTwelve(turno.split(\"-\")[0]);\n          if (starttime in turnosCargo)\n            turnosCargo[starttime].push(emp['nombre~']); \n          else\n            turnosCargo[starttime] = [emp['nombre~']];\n\n          //SE TOMA EL TURNO COMPLETO PARA MOSTRARLO EN LA HOJA HORARIOS:\n          turnosCompletos[emp['nombre~']] = emp[diaHorario]; \n      });\n\n      turnos[cargo] = turnosCargo;\n    }\n  }\n  \n  return [turnos, turnosCompletos]; \n}\n\n/////////////////////////SECCION//QUE//NO//DEBE//TOCARSE//NUNCA/////////////////////////\n\n//convierte cualquier fecha en dd/mm/yyyy\nfunction fechaExistente(stringFecha) {\n   let d = new Date(stringFecha.toString().slice(4, 15));//se crea d como un elemento de tipo fecha cortando la fecha de formato largo a formato simple \n  let dia= stringFecha.getDate(); // asignamos el valor del dia existente en la fecha a la variable dia para que no haya ningun error de ejecucion\n  if(dia<10){// si el dia es menor a 10\n    if (d.getMonth() < 10) {//si el mes es menor a 10\n    d = d.getFullYear() + \"-0\" + (d.getMonth() + 1) + \"-0\" + dia;//tanto dia como mes se separan con - y agregamos un 0 antes del digito del mes, esto para que el input reciba el formato de forma correcta\n  } else {\n    d = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-0\" + dia;// caso contrario solo se separan con -\n  }\n  }else if (d.getMonth() < 10) {// si el dia es mayo que 10 pero el mes es menor que 10 \n    d = d.getFullYear() + \"-0\" + (d.getMonth() + 1) + \"-\" + dia; // se agrega un 0 antes del digito del mes\n  } else {\n    d = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + dia;// solo separa con -\n  }\n  return d;\n}\n\n//Las 12:00 PM son las 12 del mediodia. Las 12:00 AM son las 00:00 de la media noche\n//Convierte de HH:MM AA a HH:MM\nfunction parseTime24(s) {\n  var c = s.split(':');\n  var units = c[1].split(' ');\n  var hours = parseInt(c[0]) % 12;\n  if (units[1] == \"PM\") hours += 12;\n  var st = \"\";\n  if (hours < 10) st += \"0\";\n  st += hours.toString() + \":\" + units[0];\n  return st;\n}\n\n//Convierte HH:MM a MM (int)\nfunction parseTime(s) {\n  var c = s.split(':');\n  return parseInt(c[0] * 60 + parseInt(c[1]));\n}\n\n//Convierte HH:MM AA a MM (int). CREO QUE EN VEZ DE ESTO MEJOR USAR parseTime24 Y parseTime\nfunction parseTimeTwelve(s) {\n\n  var c = s.split(':');\n  var units = c[1].split(' ');\n  var time = 0;\n  if (c[0] == 12 && (units[1] == \"AM\" || units[1] == \"am\")) { //Si son las 12:MM AM (medianoche)\n    time += 1440; //24 h en minutos\n  } else {\n    time += parseInt(c[0] * 60);\n  }\n\n  if (units[1] == \"PM\" || units[1] == \"pm\") {\n    if (c[0] != 12) time += 720; //12 h\n  }\n  time += parseInt(units[0]);\n  return time;\n}\n\nfunction test() {\n  return \"ok\";\n}\n\n//Convertir de MM (int) a \"HH:MM AA\"\nfunction convertToTwelve(number) {\n  var newtime = \"\";\n  var timez = \" AM\"; //inicializar final de la hora\n  if ((number / (12 * 60)) >= 1) { //si number se pasa del medio dia\n    timez = \" PM\"; //estamos en PM\n    number = number % (12 * 60); //conseguir minutos de esa parte del dia\n  }\n  var tenths = parseInt(number / 60); //parte entera de la hora HH\n\n  if (tenths < 10) {\n    if (tenths == 0) newtime += \"12\"; //concatenar \"12\"\n    else newtime += \"0\" + tenths.toString(); //concatenar el 0 antes para que HH sea 0H (<10)\n  }\n  else newtime += tenths.toString();\n\n  var units = number % 60; //Parte de la hora MM\n  if (units == 0) newtime += \":00\";\n  else {\n    if (units < 10) newtime += \":0\" + units.toString(); //tiene un solo digito\n    else newtime += \":\" + units.toString();             //tiene dos digitos\n  }\n\n  newtime += timez; //concatenaos la parte AA\n  return newtime;\n}\n\nfunction checkEvery(array, value, dir) {\n  for (key in array) {\n    var value = array[key];\n    if (dir) {\n      if (val < value) return false;\n    } else {\n      if (val > value) return false;\n    }\n  }\n  return true;\n}\n\nfunction calcularDiurnas(array) {\n  var inicio = parseInt(array[0]);\n  var final = parseInt(array[1]);\n  var horas = 0;\n  if (inicio == 1440 & final > 360) inicio = 360;\n  if ((inicio < 360 || inicio > 1260) && (final < 360 || final > 1260) && (final < inicio)) return 0;\n  if (inicio >= 1260 && inicio < final) return 0;\n  if (inicio > 1260 || inicio < 360) inicio = 360;\n  if (final > 1260 || final < 360) final = 1260;\n\n  return Math.abs((final - inicio) / 60);\n}\n\nfunction calcularNocturnas(array) {\n  var inicio = parseInt(array[0]);\n  var final = parseInt(array[1]);\n  var horas = 0;\n  if ((360 <= inicio && inicio <= 1260) && (final >= 360 && final <= 1260)) {\n    var v = 360 <= final <= 1260;\n    return 0;\n  }\n  var otras = 0;\n  if (array[0] < 360) otras = 360 - array[0];\n  if (array[0] < 1260) inicio = 1260;\n  if (array[1] < 360) final += 1440;\n  return Math.abs((final - inicio + otras) / 60);\n}\n\n/*************************************************************/\n// NumeroALetras\n// The MIT License (MIT)\n// \n// Copyright (c) 2015 Luis Alfredo Chee \n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n// \n// @author Rodolfo Carmona\n// @contributor Jean (jpbadoino@gmail.com)\n/*************************************************************/\n// Retrieved from @rgcl comment on Aug 6, 2017 • https://gist.github.com/alfchee/e563340276f89b22042a, \n/*************************************************************/\nvar numeroALetras = (function() {\n\n// Código basado en https://gist.github.com/alfchee/e563340276f89b22042a\n    function Unidades(num){\n\n        switch(num)\n        {\n            case 1: return 'UN';\n            case 2: return 'DOS';\n            case 3: return 'TRES';\n            case 4: return 'CUATRO';\n            case 5: return 'CINCO';\n            case 6: return 'SEIS';\n            case 7: return 'SIETE';\n            case 8: return 'OCHO';\n            case 9: return 'NUEVE';\n        }\n\n        return '';\n    }//Unidades()\n\n    function Decenas(num){\n\n        let decena = Math.floor(num/10);\n        let unidad = num - (decena * 10);\n\n        switch(decena)\n        {\n            case 1:\n                switch(unidad)\n                {\n                    case 0: return 'DIEZ';\n                    case 1: return 'ONCE';\n                    case 2: return 'DOCE';\n                    case 3: return 'TRECE';\n                    case 4: return 'CATORCE';\n                    case 5: return 'QUINCE';\n                    default: return 'DIECI' + Unidades(unidad);\n                }\n            case 2:\n                switch(unidad)\n                {\n                    case 0: return 'VEINTE';\n                    default: return 'VEINTI' + Unidades(unidad);\n                }\n            case 3: return DecenasY('TREINTA', unidad);\n            case 4: return DecenasY('CUARENTA', unidad);\n            case 5: return DecenasY('CINCUENTA', unidad);\n            case 6: return DecenasY('SESENTA', unidad);\n            case 7: return DecenasY('SETENTA', unidad);\n            case 8: return DecenasY('OCHENTA', unidad);\n            case 9: return DecenasY('NOVENTA', unidad);\n            case 0: return Unidades(unidad);\n        }\n    }//Unidades()\n\n    function DecenasY(strSin, numUnidades) {\n        if (numUnidades > 0)\n            return strSin + ' Y ' + Unidades(numUnidades)\n\n        return strSin;\n    }//DecenasY()\n\n    function Centenas(num) {\n        let centenas = Math.floor(num / 100);\n        let decenas = num - (centenas * 100);\n\n        switch(centenas)\n        {\n            case 1:\n                if (decenas > 0)\n                    return 'CIENTO ' + Decenas(decenas);\n                return 'CIEN';\n            case 2: return 'DOSCIENTOS ' + Decenas(decenas);\n            case 3: return 'TRESCIENTOS ' + Decenas(decenas);\n            case 4: return 'CUATROCIENTOS ' + Decenas(decenas);\n            case 5: return 'QUINIENTOS ' + Decenas(decenas);\n            case 6: return 'SEISCIENTOS ' + Decenas(decenas);\n            case 7: return 'SETECIENTOS ' + Decenas(decenas);\n            case 8: return 'OCHOCIENTOS ' + Decenas(decenas);\n            case 9: return 'NOVECIENTOS ' + Decenas(decenas);\n        }\n\n        return Decenas(decenas);\n    }//Centenas()\n\n    function Seccion(num, divisor, strSingular, strPlural) {\n        let cientos = Math.floor(num / divisor)\n        let resto = num - (cientos * divisor)\n\n        let letras = '';\n\n        if (cientos > 0)\n            if (cientos > 1)\n                letras = Centenas(cientos) + ' ' + strPlural;\n            else\n                letras = strSingular;\n\n        if (resto > 0)\n            letras += '';\n\n        return letras;\n    }//Seccion()\n\n    function Miles(num) {\n        let divisor = 1000;\n        let cientos = Math.floor(num / divisor)\n        let resto = num - (cientos * divisor)\n\n        let strMiles = Seccion(num, divisor, 'UN MIL', 'MIL');\n        let strCentenas = Centenas(resto);\n\n        if(strMiles == '')\n            return strCentenas;\n\n        return strMiles + ' ' + strCentenas;\n    }//Miles()\n\n    function Millones(num) {\n        let divisor = 1000000;\n        let cientos = Math.floor(num / divisor)\n        let resto = num - (cientos * divisor)\n\n        let strMillones = Seccion(num, divisor, 'UN MILLON DE', 'MILLONES DE');\n        let strMiles = Miles(resto);\n\n        if(strMillones == '')\n            return strMiles;\n\n        return strMillones + ' ' + strMiles;\n    }//Millones()\n\n    return function NumeroALetras(num, currency) {\n        currency = currency || {};\n        let data = {\n            numero: num,\n            enteros: Math.floor(num),\n            centavos: 0, // (((Math.round(num * 100)) - (Math.floor(num) * 100))),\n            letrasCentavos: '',\n            letrasMonedaPlural: currency.plural || 'PESOS',//'PESOS', 'Dólares', 'Bolívares', 'etcs'\n            letrasMonedaSingular: currency.singular || 'PESO', //'PESO', 'Dólar', 'Bolivar', 'etc'\n            letrasMonedaCentavoPlural: currency.centPlural || 'CENTAVOS',\n            letrasMonedaCentavoSingular: currency.centSingular || 'CENTAVO'\n        };\n\n        if (data.centavos > 0) {\n            data.letrasCentavos = 'CON ' + (function () {\n                    if (data.centavos == 1)\n                        return Millones(data.centavos) + ' ' + data.letrasMonedaCentavoSingular;\n                    else\n                        return Millones(data.centavos) + ' ' + data.letrasMonedaCentavoPlural;\n                })();\n        };\n\n        if(data.enteros == 0)\n            return 'CERO ' + data.letrasMonedaPlural + ' ' + data.letrasCentavos;\n        if (data.enteros == 1)\n            return Millones(data.enteros) + ' ' + data.letrasMonedaSingular + ' ' + data.letrasCentavos;\n        else\n            return Millones(data.enteros) + ' ' + data.letrasMonedaPlural + ' ' + data.letrasCentavos;\n    };\n\n})();\n\n"
    },
    {
      "id": "4b56f1db-154d-471f-9693-0da8548352ba",
      "name": "drafts",
      "type": "server_js",
      "source": "// function getRecords(xml) {\n//   var xmlDoc = XmlService.parse(xml);\n\n//   var response = xmlDoc.getRootElement();\n//   // var records = response.getChild('Rentras');\n//   // var recordList = records.getChildren('rentra');\n//   var recordList = response.getChildren('rentra');\n//   response.get\n\n//   var output = [];\n//   for (var i = 0, record; record = recordList[i]; i++) {\n//     var name = record.getAttribute('pno').getValue();\n//     var attributes = record.getAttributes().map(attr => attr.getName());\n//     output.push(name);\n//     // var columnList = record.getChildren('column');\n//     // var name = '';\n//     // var email = '';\n//     // for (var j = 0, column; column = columnList[j]; j++) {\n//     //   var attrName = column.getAttribute('name').getValue();\n//     //   var text = column.getChild('value').getText();\n//     //   if (attrName === 'Name') {\n//     //     name = text;\n//     //   } else if (attrName === 'Email') {\n//     //     email = text;\n//     //   }\n//     // }\n//     // output.push([name, email]);\n//   }\n//   return output;\n// }\n\n// function readXml(xmlString, xmlFile){\n\n//   if(xmlString){\n//     // try\n//     // {\n//         // if ( window.DOMParser )\n//             var parser = new DOMParser();\n//             xmlString = parser.parseFromString( xmlString, \"application/xml\" );\n//         // else if( window.ActiveXObject )\n//         // {\n//         //     var xmlObject = new ActiveXObject( \"Microsoft.XMLDOM\" );\n//         //     xmlObject.async = false;\n//         //     xmlObject.loadXML( xmlString );\n//         //     xmlString = xmlObject;\n//         //     xmlObject = undefined;\n//         // }\n//         // else\n//             // throw new Error( \"Cannot find an XML parser!\" );\n//     // }\n//     // catch( error )\n//     // {\n//     //     return false;\n//     // }\n//   }\n\n//   var xmlDoc;\n//   if(!xmlFile) xmlFile = xmlString; \n\n//   if(typeof window.DOMParser != \"undefined\") {\n//       xmlhttp=new XMLHttpRequest();\n//       xmlhttp.open(\"GET\",xmlFile,false);\n//       if (xmlhttp.overrideMimeType){\n//           xmlhttp.overrideMimeType('text/xml');\n//       }\n//       xmlhttp.send();\n//       xmlDoc=xmlhttp.responseXML;\n//   }\n//   else{\n//       xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n//       xmlDoc.async=\"false\";\n//       xmlDoc.load(xmlFile);\n//   }\n//   var tagObj=xmlDoc.getElementsByTagName(\"marker\");\n//   var typeValue = tagObj[0].getElementsByTagName(\"type\")[0].childNodes[0].nodeValue;\n//   var titleValue = tagObj[0].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n// }\n\n// // Log the title and labels for the first page of blog posts on the\n// // Google Workspace Developer blog.\n// function parseXml() {\n//   var url = 'https://gsuite-developers.googleblog.com/atom.xml';\n//   var xml = UrlFetchApp.fetch(url).getContentText();\n//   SpreadsheetApp.getActiveSpreadsheet().getSheetByName('MAIN').getRange(1,1).setValue(xml.substring(0,50000));\n//   var document = XmlService.parse(xmlM);\n//   var root = document.getRootElement();\n//   var atom = XmlService.getNamespace('http://www.w3.org/2005/Atom');\n\n//   var entries = root.getChildren('mas', atom);\n//   for (var i = 0; i < entries.length; i++) {\n//     var title = entries[i].getChild('title', atom).getText();\n//     var categoryElements = entries[i].getChildren('rentra', atom);\n//     var labels = [];\n//     for (var j = 0; j < categoryElements.length; j++) {\n//       labels.push(categoryElements[j].getAttribute('term').getValue());\n//     }\n//     Logger.log('%s (%s)', title, labels.join(', '));\n//   }\n// }\n\n\nlet xmlM = `<?xml version=\"1.0\"?>\n<catalog>\n   <book id=\"bk101\">\n      <author>Gambardella, Matthew</author>\n      <title>XML Developer's Guide</title>\n      <genre>Computer</genre>\n      <price>44.95</price>\n      <publish_date>2000-10-01</publish_date>\n      <description>An in-depth look at creating applications \n      with XML.</description>\n   </book>\n   <book id=\"bk102\">\n      <author>Ralls, Kim</author>\n      <title>Midnight Rain</title>\n      <genre>Fantasy</genre>\n      <price>5.95</price>\n      <publish_date>2000-12-16</publish_date>\n      <description>A former architect battles corporate zombies, \n      an evil sorceress, and her own childhood to become queen \n      of the world.</description>\n   </book>\n   <book id=\"bk103\">\n      <author>Corets, Eva</author>\n      <title>Maeve Ascendant</title>\n      <genre>Fantasy</genre>\n      <price>5.95</price>\n      <publish_date>2000-11-17</publish_date>\n      <description>After the collapse of a nanotechnology \n      society in England, the young survivors lay the \n      foundation for a new society.</description>\n   </book>\n   <book id=\"bk104\">\n      <author>Corets, Eva</author>\n      <title>Oberon's Legacy</title>\n      <genre>Fantasy</genre>\n      <price>5.95</price>\n      <publish_date>2001-03-10</publish_date>\n      <description>In post-apocalypse England, the mysterious \n      agent known only as Oberon helps to create a new life \n      for the inhabitants of London. Sequel to Maeve \n      Ascendant.</description>\n   </book>\n   <book id=\"bk105\">\n      <author>Corets, Eva</author>\n      <title>The Sundered Grail</title>\n      <genre>Fantasy</genre>\n      <price>5.95</price>\n      <publish_date>2001-09-10</publish_date>\n      <description>The two daughters of Maeve, half-sisters, \n      battle one another for control of England. Sequel to \n      Oberon's Legacy.</description>\n   </book>\n   <book id=\"bk106\">\n      <author>Randall, Cynthia</author>\n      <title>Lover Birds</title>\n      <genre>Romance</genre>\n      <price>4.95</price>\n      <publish_date>2000-09-02</publish_date>\n      <description>When Carla meets Paul at an ornithology \n      conference, tempers fly as feathers get ruffled.</description>\n   </book>\n   <book id=\"bk107\">\n      <author>Thurman, Paula</author>\n      <title>Splish Splash</title>\n      <genre>Romance</genre>\n      <price>4.95</price>\n      <publish_date>2000-11-02</publish_date>\n      <description>A deep sea diver finds true love twenty \n      thousand leagues beneath the sea.</description>\n   </book>\n   <book id=\"bk108\">\n      <author>Knorr, Stefan</author>\n      <title>Creepy Crawlies</title>\n      <genre>Horror</genre>\n      <price>4.95</price>\n      <publish_date>2000-12-06</publish_date>\n      <description>An anthology of horror stories about roaches,\n      centipedes, scorpions  and other insects.</description>\n   </book>\n   <book id=\"bk109\">\n      <author>Kress, Peter</author>\n      <title>Paradox Lost</title>\n      <genre>Science Fiction</genre>\n      <price>6.95</price>\n      <publish_date>2000-11-02</publish_date>\n      <description>After an inadvertant trip through a Heisenberg\n      Uncertainty Device, James Salway discovers the problems \n      of being quantum.</description>\n   </book>\n   <book id=\"bk110\">\n      <author>O'Brien, Tim</author>\n      <title>Microsoft .NET: The Programming Bible</title>\n      <genre>Computer</genre>\n      <price>36.95</price>\n      <publish_date>2000-12-09</publish_date>\n      <description>Microsoft's .NET initiative is explored in \n      detail in this deep programmer's reference.</description>\n   </book>\n   <book id=\"bk111\">\n      <author>O'Brien, Tim</author>\n      <title>MSXML3: A Comprehensive Guide</title>\n      <genre>Computer</genre>\n      <price>36.95</price>\n      <publish_date>2000-12-01</publish_date>\n      <description>The Microsoft MSXML3 parser is covered in \n      detail, with attention to XML DOM interfaces, XSLT processing, \n      SAX and more.</description>\n   </book>\n   <book id=\"bk112\">\n      <author>Galos, Mike</author>\n      <title>Visual Studio 7: A Comprehensive Guide</title>\n      <genre>Computer</genre>\n      <price>49.95</price>\n      <publish_date>2001-04-16</publish_date>\n      <description>Microsoft Visual Studio 7 is explored in depth,\n      looking at how Visual Basic, Visual C++, C#, and ASP+ are \n      integrated into a comprehensive development \n      environment.</description>\n   </book>\n</catalog>`;\n\nfunction test(){\n  // let xml = xmlM + '</mas>';\n  let fileName = 'TEST'\n  var [records, formatInfo] = getRecords(xmlM);\n  writeRecords(fileName, records, formatInfo);\n  return;\n}"
    },
    {
      "id": "2f5d56db-0876-48ca-9d3e-6b5e3992361d",
      "name": "App",
      "type": "server_js",
      "source": "function doPost(e) {\n  const folderId = \"1ArcsNIPy1gXe3-yiZcRPNdK8VxERPlF0\";  // Or Folder ID which is used for putting the file instead of \"root\", if you need.\n\n  const blob = Utilities.newBlob(JSON.parse(e.postData.contents), e.parameter.mimeType, e.parameter.filename);\n  const file = DriveApp.getFolderById(folderId).createFile(blob);\n  const responseObj = {filename: file.getName(), fileId: file.getId(), fileUrl: file.getUrl()};\n  return ContentService.createTextOutput(JSON.stringify(responseObj)).setMimeType(ContentService.MimeType.JSON);\n}"
    }
  ]
}